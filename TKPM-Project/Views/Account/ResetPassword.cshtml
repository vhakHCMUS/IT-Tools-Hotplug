@model ResetPasswordModel

@{
    ViewData["Title"] = "Reset Password";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-sm animate__animated animate__fadeIn">
                <div class="card-body p-5">
                    <div class="text-center mb-4">
                        <h2 class="display-6 fw-bold text-gradient">Reset Password</h2>
                        <p class="text-muted">Enter your new password</p>
                    </div>

                    <div id="notification-container" class="mb-4" style="display: none;"></div>

                    <form id="resetPasswordForm">
                        <input type="hidden" id="Email" value="@Model.Email" />
                        <input type="hidden" id="Token" value="@Model.Token" />

                        <div class="form-floating mb-4">
                            <input type="password" class="form-control custom-input" id="Password" placeholder="New Password" required />
                            <label for="Password"><i class="bi bi-shield-lock me-2"></i>New Password</label>
                        </div>

                        <div class="form-floating mb-4">
                            <input type="password" class="form-control custom-input" id="ConfirmPassword" placeholder="Confirm Password" required />
                            <label for="ConfirmPassword"><i class="bi bi-shield-check me-2"></i>Confirm Password</label>
                        </div>

                        <button type="button" class="btn btn-primary btn-lg w-100 custom-button" onclick="submitResetPassword()">
                            <i class="bi bi-arrow-repeat me-2"></i>Reset Password
                        </button>
                    </form>

                    <div class="text-center mt-4">
                        <p>Go back to <a href="/Account/Login" class="text-decoration-none fw-bold">Sign In</a></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        async function submitResetPassword() {
            const email = document.getElementById("Email").value;
            const token = document.getElementById("Token").value;
            const password = document.getElementById("Password").value;
            const confirmPassword = document.getElementById("ConfirmPassword").value;

            if (!password || !confirmPassword) {
                showNotification("Please enter all fields", 'error');
                return;
            }

            if (password !== confirmPassword) {
                showNotification("Passwords do not match", 'error');
                return;
            }

            try {
                const response = await fetch('/api/auth/reset-password', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ email, token, password, confirmPassword })
                });

                const data = await response.json();
                if (response.ok) {
                    showNotification(data.message || "Password reset successfully", 'success');
                } else {
                    showNotification(data.message || "An error occurred", 'error');
                }
            } catch (error) {
                console.error('Error:', error);
                showNotification("Unexpected error occurred", 'error');
            }
        }

        function showNotification(message, type) {
            const container = document.getElementById('notification-container');
            container.style.display = 'block';

            const icon = type === 'success'
                ? '<i class="bi bi-check-circle-fill"></i>'
                : '<i class="bi bi-exclamation-circle-fill"></i>';

            container.innerHTML = `
                <div class="notification notification-${type}">
                    ${icon}
                    <span>${message}</span>
                </div>
            `;

            if (type === 'success') {
                setTimeout(() => {
                    container.style.display = 'none';
                }, 5000);
            }
        }
    </script>
}
