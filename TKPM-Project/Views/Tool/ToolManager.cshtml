@using TKPM_Project.Models.Tools
@model List<Tool>

@{
    ViewData["Title"] = "Tool Manager";
}

<style>
    :root {
        --primary-pink: #ffb6c1;
        --secondary-pink: #f8c8dc;
        --accent-rose: #ff91a4;
        --background-light: #fff0f5;
        --text-dark: #6a0572;
        --border-soft: #ffdde1;
        --success-green: #28a745;
        --danger-red: #dc3545;
        --info-blue: #17a2b8;
    }

    .card {
        border-radius: 16px;
        border: none;
        box-shadow: 0 5px 15px rgba(255, 182, 193, 0.15);
        transition: all 0.3s ease;
        overflow: hidden;
    }

    .card:hover {
        box-shadow: 0 8px 20px rgba(255, 182, 193, 0.25);
        transform: translateY(-3px);
    }

    .card-header {
        background-color: var(--secondary-pink);
        color: var(--text-dark);
        border-bottom: none;
        font-weight: 600;
        padding: 1.25rem;
    }

    .icon-title {
        font-size: 1.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .btn-modern {
        border-radius: 50px;
        padding: 0.5rem 1.25rem;
        font-size: 0.9rem;
        font-weight: 500;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
        box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);
    }

    .btn-modern:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 10px rgba(0, 0, 0, 0.15);
    }

    .btn-modern.btn-primary {
        background-color: var(--accent-rose);
        border-color: var(--accent-rose);
    }

    .btn-modern.btn-primary:hover {
        background-color: #ff7a94;
        border-color: #ff7a94;
    }

    .btn-modern.btn-outline-primary {
        color: var(--accent-rose);
        border-color: var(--accent-rose);
    }

    .btn-modern.btn-outline-primary:hover {
        background-color: var(--accent-rose);
        color: white;
    }

    .tool-table {
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 5px 15px rgba(255, 182, 193, 0.1);
    }

    .tool-table thead {
        background: linear-gradient(to right, var(--secondary-pink), var(--primary-pink));
        color: var(--text-dark);
    }

    .tool-table th {
        font-weight: 600;
        border: none;
        padding: 1rem;
    }

    .tool-table td {
        vertical-align: middle;
        padding: 0.75rem 1rem;
        border-color: #f9f0f2;
    }

    .tool-table tr:hover {
        background-color: rgba(255, 182, 193, 0.05);
    }

    .action-btn {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        margin: 0 0.15rem;
        transition: all 0.3s ease;
        background: white;
        color: var(--text-dark);
        border: 2px solid;
    }

    .action-btn:hover {
        transform: translateY(-2px);
    }

    .action-btn.view {
        border-color: var(--info-blue);
        color: var(--info-blue);
    }

    .action-btn.view:hover {
        background-color: var(--info-blue);
        color: white;
    }

    .action-btn.delete {
        border-color: var(--danger-red);
        color: var(--danger-red);
    }

    .action-btn.delete:hover {
        background-color: var(--danger-red);
        color: white;
    }

    .toggle-switch .form-check-input {
        width: 50px;
        height: 24px;
        cursor: pointer;
    }

    .toggle-switch .form-check-input:checked {
        background-color: var(--success-green);
        border-color: var(--success-green);
    }

    .form-control, .form-select {
        border-radius: 10px;
        padding: 0.6rem 1rem;
        border: 2px solid var(--border-soft);
        transition: all 0.3s ease;
    }

    .form-control:focus, .form-select:focus {
        box-shadow: 0 0 0 0.25rem rgba(255, 145, 164, 0.25);
        border-color: var(--accent-rose);
    }

    .file-upload-wrapper {
        position: relative;
        overflow: hidden;
        border-radius: 10px;
        border: 2px dashed var(--border-soft);
        padding: 1.5rem;
        text-align: center;
        background-color: rgba(255, 240, 245, 0.5);
        transition: all 0.3s ease;
    }

    .file-upload-wrapper:hover {
        background-color: rgba(255, 240, 245, 0.8);
        border-color: var(--accent-rose);
    }

    .file-upload-icon {
        font-size: 2rem;
        color: var(--accent-rose);
        margin-bottom: 0.5rem;
    }

    .file-upload-text {
        margin-bottom: 0.5rem;
        color: var(--text-dark);
    }

    .file-upload-input {
        position: absolute;
        font-size: 100px;
        opacity: 0;
        right: 0;
        top: 0;
        cursor: pointer;
        width: 100%;
        height: 100%;
    }

    .page-title {
        font-weight: 700;
        background: linear-gradient(to right, var(--text-dark), var(--accent-rose));
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
        text-fill-color: transparent;
        margin-bottom: 1.5rem;
    }

    .status-badge {
        display: inline-block;
        padding: 0.25rem 0.75rem;
        border-radius: 50px;
        font-size: 0.75rem;
        font-weight: 600;
    }

    .status-badge.premium {
        background-color: #ffd700;
        color: #846c00;
    }

    .status-badge.free {
        background-color: #e2e3e5;
        color: #383d41;
    }

    .tool-count {
        color: var(--accent-rose);
        font-weight: 600;
    }

    .notification {
        position: fixed;
        top: 1rem;
        right: 1rem;
        padding: 1rem;
        border-radius: 10px;
        background-color: white;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        display: flex;
        align-items: center;
        gap: 0.75rem;
        z-index: 1000;
        max-width: 350px;
        opacity: 0;
        transform: translateY(-20px);
        transition: all 0.3s ease;
    }

    .notification.show {
        opacity: 1;
        transform: translateY(0);
    }

    .notification-success {
        border-left: 4px solid var(--success-green);
    }

    .notification-error {
        border-left: 4px solid var(--danger-red);
    }

    .notification-icon {
        font-size: 1.5rem;
    }

    .notification-success .notification-icon {
        color: var(--success-green);
    }

    .notification-error .notification-icon {
        color: var(--danger-red);
    }

    .notification-content {
        flex: 1;
    }

    .notification-title {
        font-weight: 600;
        margin-bottom: 0.25rem;
    }

    .notification-message {
        font-size: 0.875rem;
        color: #666;
    }

    .notification-close {
        background: none;
        border: none;
        color: #999;
        cursor: pointer;
        padding: 0.25rem;
        font-size: 1.25rem;
        line-height: 1;
    }
</style>

<div class="container mt-4">
    <h1 class="text-center page-title">
        <i class="bi bi-gear-fill me-2"></i>Tool Manager
    </h1>

    <!-- Import Tool Card -->
    <div class="card mb-4">
        <div class="card-header">
            <div class="icon-title">
                <i class="bi bi-cloud-upload-fill"></i>
                <span>Import New Tool</span>
            </div>
        </div>
        <div class="card-body p-4">
            <form asp-action="ImportTool" asp-controller="Tool" method="post" enctype="multipart/form-data">
                <div class="mb-3">
                    <div class="file-upload-wrapper mb-3">
                        <div class="file-upload-icon">
                            <i class="bi bi-file-earmark-code-fill"></i>
                        </div>
                        <div class="file-upload-text">Drag & drop your DLL file or click to browse</div>
                        <small class="text-muted">Only .dll files are accepted</small>
                        <input type="file" name="dllFile" id="dllFile" class="file-upload-input" accept=".dll" required />
                    </div>
                </div>
                <div class="mb-3">
                    <label for="toolCategory" class="form-label">
                        <i class="bi bi-tag-fill me-2"></i>Tool Category
                    </label>
                    <select name="toolCategory" id="toolCategory" class="form-select">
                        <option value="">Select a category</option>
                        <option value="API Testing">API Testing</option>
                        <option value="Data Formatter">Data Formatter</option>
                        <option value="DateTime">DateTime</option>
                        <option value="Encryption">Encryption</option>
                        <option value="Math">Math</option>
                        <option value="Productivity">Productivity</option>
                        <option value="Programming">Programming</option>
                        <option value="Text Processing">Text Processing</option>
                        <option value="Utilities">Utilities</option>
                        <option value="Git helper">Git helper</option>
                    </select>
                </div>
                <div class="d-flex justify-content-between">
                    <button type="submit" class="btn btn-modern btn-primary">
                        <i class="bi bi-upload"></i>
                        <span>Import Tool</span>
                    </button>
                    <a asp-action="Tools" class="btn btn-modern btn-outline-primary">
                        <i class="bi bi-grid"></i>
                        <span>View All Tools</span>
                    </a>
                </div>
            </form>
        </div>
    </div>

    <!-- Tools Table -->
    @if (Model.Any())
    {
        <div class="card">
            <div class="card-header">
                <div class="d-flex justify-content-between align-items-center">
                    <div class="icon-title">
                        <i class="bi bi-tools"></i>
                        <span>Manage Tools</span>
                    </div>
                    <span class="badge bg-light text-dark">
                        <i class="bi bi-collection"></i> <span class="tool-count">@Model.Count</span> Tools
                    </span>
                </div>
            </div>
            <div class="card-body">
                <!-- Search and Filter Controls -->
                <div class="row mb-4">
                    <div class="col-md-4">
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-search"></i></span>
                            <input type="text" id="searchInput" class="form-control" placeholder="Search tools...">
                        </div>
                    </div>
                    <div class="col-md-3">
                        <select id="categoryFilter" class="form-select">
                            <option value="">All Categories</option>
                            <option value="API Testing">API Testing</option>
                            <option value="Data Formatter">Data Formatter</option>
                            <option value="DateTime">DateTime</option>
                            <option value="Encryption">Encryption</option>
                            <option value="Math">Math</option>
                            <option value="Productivity">Productivity</option>
                            <option value="Programming">Programming</option>
                            <option value="Text Processing">Text Processing</option>
                            <option value="Utilities">Utilities</option>
                            <option value="Git helper">Git helper</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <select id="premiumFilter" class="form-select">
                            <option value="">All Tools</option>
                            <option value="true">Premium Only</option>
                            <option value="false">Free Only</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <select id="sortBy" class="form-select">
                            <option value="name_asc">Name (A-Z)</option>
                            <option value="name_desc">Name (Z-A)</option>
                            <option value="date_asc">Date (Oldest)</option>
                            <option value="date_desc">Date (Newest)</option>
                        </select>
                    </div>
                </div>
                <div class="table-responsive">
                    <table class="table table-hover tool-table mb-0">
                        <thead>
                            <tr>
                                <th><i class="bi bi-wrench me-2"></i>Tool Name</th>
                                <th><i class="bi bi-tag me-2"></i>Category</th>
                                <th class="text-center"><i class="bi bi-trophy me-2"></i>Premium</th>
                                <th class="text-center"><i class="bi bi-toggle-on me-2"></i>Available</th>
                                <th><i class="bi bi-calendar-date me-2"></i>Created At</th>
                                <th class="text-center"><i class="bi bi-sliders me-2"></i>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var tool in Model)
                            {
                                <tr>
                                    <td>
                                        <strong>@tool.Name</strong>
                                    </td>
                                    <td>
                                        <span class="badge bg-light text-dark">
                                            @(string.IsNullOrEmpty(tool.Category) ? "Uncategorized" : tool.Category)
                                        </span>
                                    </td>
                                    <td class="text-center">
                                        <div class="form-check form-switch toggle-switch d-flex justify-content-center">
                                            <input class="form-check-input" type="checkbox" id="premium_@tool.Name"
                                                   @(tool.IsPremium ? "checked" : "") onchange="togglePremium('@tool.Name', this);" />
                                        </div>
                                    </td>
                                    <td class="text-center">
                                        <div class="form-check form-switch toggle-switch d-flex justify-content-center">
                                            <input class="form-check-input" type="checkbox" id="available_@tool.Name"
                                                   @(tool.IsAvailable ? "checked" : "") onchange="toggleAvailability('@tool.Name', this);" />
                                        </div>
                                    </td>
                                    <td>
                                        <small>
                                            <i class="bi bi-clock me-1"></i>
                                            @tool.CreatedAt.ToString("yyyy-MM-dd HH:mm")
                                        </small>
                                    </td>
                                    <td class="text-center">
                                        <a asp-action="Detail" asp-route-toolName="@tool.Name" class="action-btn view" 
                                           data-bs-toggle="tooltip" title="View Tool">
                                            <i class="bi bi-eye-fill"></i>
                                        </a>
                                        <button type="button" class="action-btn delete" 
                                                onclick="confirmDelete('@tool.Name')" 
                                                data-bs-toggle="tooltip" title="Delete Tool">
                                            <i class="bi bi-trash-fill"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="card p-5 text-center">
            <div class="mb-3">
                <i class="bi bi-info-circle" style="font-size: 3rem; color: var(--accent-rose);"></i>
            </div>
            <h4>No Tools Available</h4>
            <p class="text-muted">Start by importing tools using the form above.</p>
        </div>
    }
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete <span id="toolNameToDelete"></span>?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-modern btn-outline-primary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteForm" asp-action="DeleteTool" method="post">
                    <input type="hidden" id="toolNameInput" name="toolName" value="" />
                    <button type="submit" class="btn btn-modern btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Notification template -->
<div id="notification" class="notification" style="display: none;">
    <div class="notification-icon">
        <i class="bi bi-check-circle-fill" id="notification-icon"></i>
    </div>
    <div class="notification-content">
        <div class="notification-title" id="notification-title">Success</div>
        <div class="notification-message" id="notification-message">Operation completed successfully.</div>
    </div>
    <button class="notification-close" onclick="closeNotification()">
        <i class="bi bi-x"></i>
    </button>
</div>

@section Scripts {
    <script>
        $(function () {
            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            });

            // Custom file input display
            $("#dllFile").on('change', function () {
                var fileName = $(this).val().split('\\').pop();
                if (fileName) {
                    $(this).closest('.file-upload-wrapper').find('.file-upload-text').text(fileName);
                } else {
                    $(this).closest('.file-upload-wrapper').find('.file-upload-text').text('Drag & drop your DLL file or click to browse');
                }
            });
        });

        function showNotification(title, message, type) {
            // Set notification content
            $('#notification-title').text(title);
            $('#notification-message').text(message);
            
            // Set notification type
            $('#notification').removeClass('notification-success notification-error');
            $('#notification').addClass('notification-' + type);
            
            // Set icon
            $('#notification-icon').removeClass('bi-check-circle-fill bi-exclamation-circle-fill');
            if (type === 'success') {
                $('#notification-icon').addClass('bi-check-circle-fill');
            } else {
                $('#notification-icon').addClass('bi-exclamation-circle-fill');
            }
            
            // Show notification
            $('#notification').css('display', 'flex').addClass('show');
            
            // Auto hide after 5 seconds
            setTimeout(closeNotification, 5000);
        }
        
        function closeNotification() {
            $('#notification').removeClass('show');
            setTimeout(function() {
                $('#notification').css('display', 'none');
            }, 300);
        }

        function confirmDelete(toolName) {
            $('#toolNameToDelete').text(toolName);
            $('#toolNameInput').val(toolName);
            var deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
            deleteModal.show();
        }

        function togglePremium(toolName, element) {
            $.ajax({
                url: '@Url.Action("TogglePremium", "Tool")',
                type: 'POST',
                data: { toolName: toolName, isPremium: element.checked },
                success: function (response) {
                    if (response.success) {
                        showNotification(
                            'Status Updated', 
                            'Premium status for ' + toolName + ' has been ' + (element.checked ? 'enabled' : 'disabled'),
                            'success'
                        );
                    } else {
                        showNotification('Error', response.message || 'Failed to update premium status', 'error');
                        element.checked = !element.checked;
                    }
                },
                error: function () {
                    showNotification('Error', 'Failed to update premium status. Please try again.', 'error');
                    element.checked = !element.checked;
                }
            });
        }

        function toggleAvailability(toolName, element) {
            $.ajax({
                url: '@Url.Action("ToggleAvailability", "Tool")',
                type: 'POST',
                data: { toolName: toolName, isAvailable: element.checked },
                success: function (response) {
                    if (response.success) {
                        showNotification(
                            'Status Updated', 
                            'Availability for ' + toolName + ' has been ' + (element.checked ? 'enabled' : 'disabled'),
                            'success'
                        );
                    } else {
                        showNotification('Error', response.message || 'Failed to update availability', 'error');
                        element.checked = !element.checked;
                    }
                },
                error: function () {
                    showNotification('Error', 'Failed to update availability. Please try again.', 'error');
                    element.checked = !element.checked;
                }
            });
        }

        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('searchInput');
            const categoryFilter = document.getElementById('categoryFilter');
            const premiumFilter = document.getElementById('premiumFilter');
            const sortBy = document.getElementById('sortBy');
            const toolTable = document.querySelector('.tool-table tbody');
            const toolRows = Array.from(toolTable.querySelectorAll('tr'));
            const toolCount = document.querySelector('.tool-count');

            function filterAndSortTools() {
                const searchTerm = searchInput.value.toLowerCase();
                const categoryValue = categoryFilter.value;
                const premiumValue = premiumFilter.value;
                const sortValue = sortBy.value;

                let filteredRows = toolRows.filter(row => {
                    const toolName = row.querySelector('td:first-child').textContent.toLowerCase();
                    const toolCategory = row.querySelector('td:nth-child(2)').textContent;
                    const isPremium = row.querySelector('td:nth-child(3) input[type="checkbox"]').checked;

                    const matchesSearch = toolName.includes(searchTerm);
                    const matchesCategory = !categoryValue || toolCategory.includes(categoryValue);
                    const matchesPremium = !premiumValue || (premiumValue === 'true' && isPremium) || (premiumValue === 'false' && !isPremium);

                    return matchesSearch && matchesCategory && matchesPremium;
                });

                // Sort the filtered rows
                filteredRows.sort((a, b) => {
                    const aName = a.querySelector('td:first-child').textContent;
                    const bName = b.querySelector('td:first-child').textContent;
                    const aDate = new Date(a.querySelector('td:nth-child(5)').textContent);
                    const bDate = new Date(b.querySelector('td:nth-child(5)').textContent);

                    switch(sortValue) {
                        case 'name_asc':
                            return aName.localeCompare(bName);
                        case 'name_desc':
                            return bName.localeCompare(aName);
                        case 'date_asc':
                            return aDate - bDate;
                        case 'date_desc':
                            return bDate - aDate;
                        default:
                            return 0;
                    }
                });

                // Update the table
                toolTable.innerHTML = '';
                filteredRows.forEach(row => toolTable.appendChild(row));

                // Update the tool count
                toolCount.textContent = filteredRows.length;
            }

            // Add event listeners
            searchInput.addEventListener('input', filterAndSortTools);
            categoryFilter.addEventListener('change', filterAndSortTools);
            premiumFilter.addEventListener('change', filterAndSortTools);
            sortBy.addEventListener('change', filterAndSortTools);

            // Initial filter and sort
            filterAndSortTools();
        });
    </script>
}